{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/mnt/d/Projects/streams/client/src/components/GoogleAuth.js\";\nimport React, { Component } from 'react';\nimport './GoogleAuth.css';\nimport { connect } from 'react-redux';\nimport { signIn, signOut } from '../actions';\n\nclass GoogleAuth extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onAuthChange = isSignedIn => {\n      if (isSignedIn) {\n        this.props.signIn(this.auth.currentUser.get().getId());\n      } else {\n        this.props.signOut();\n      }\n    };\n\n    this.onSignInClick = () => {\n      this.auth.signIn();\n    };\n\n    this.onSignOutClick = () => {\n      this.auth.signOut();\n    };\n  }\n\n  componentDidMount() {\n    window.gapi.load('client:auth2', () => {\n      window.gapi.client.init({\n        clientId: '833629421106-5llk1e0u6stomps348iu29ljgk3i2o6u.apps.googleusercontent.com',\n        scope: 'email'\n      }).then(() => {\n        this.auth = window.gapi.auth2.getAuthInstance();\n        this.setState({\n          isSignedIn: this.auth.isSignedIn.get()\n        });\n        this.auth.isSignedIn.listen(this.onAuthChange);\n      });\n    });\n  }\n\n  renderAuthButton() {\n    if (this.state.isSignedIn === null) {\n      return null;\n    } else if (this.props.isSignedIn) {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"loginBtn loginBtn--google\",\n        onClick: this.onSignOutClick,\n        children: \"Log Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"loginBtn loginBtn--google\",\n        onClick: this.onSignInClick,\n        children: \"Login With Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.renderAuthButton()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  signIn,\n  signOut\n})(GoogleAuth);","map":{"version":3,"sources":["/mnt/d/Projects/streams/client/src/components/GoogleAuth.js"],"names":["React","Component","connect","signIn","signOut","GoogleAuth","onAuthChange","isSignedIn","props","auth","currentUser","get","getId","onSignInClick","onSignOutClick","componentDidMount","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","setState","listen","renderAuthButton","state","render","mapStateToProps"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,kBAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,YAAhC;;AAEA,MAAMC,UAAN,SAAyBJ,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SAc/BK,YAd+B,GAcfC,UAAD,IAAgB;AAC3B,UAAGA,UAAH,EAAe;AACf,aAAKC,KAAL,CAAWL,MAAX,CAAkB,KAAKM,IAAL,CAAUC,WAAV,CAAsBC,GAAtB,GAA4BC,KAA5B,EAAlB;AACC,OAFD,MAEO;AACP,aAAKJ,KAAL,CAAWJ,OAAX;AACC;AACJ,KApB8B;;AAAA,SAsB/BS,aAtB+B,GAsBf,MAAM;AAClB,WAAKJ,IAAL,CAAUN,MAAV;AACH,KAxB8B;;AAAA,SA0B/BW,cA1B+B,GA0Bd,MAAM;AACnB,WAAKL,IAAL,CAAUL,OAAV;AACH,KA5B8B;AAAA;;AAC/BW,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,EAAiC,MAAM;AACnCF,MAAAA,MAAM,CAACC,IAAP,CAAYE,MAAZ,CAAmBC,IAAnB,CAAwB;AACpBC,QAAAA,QAAQ,EAAE,0EADU;AAEpBC,QAAAA,KAAK,EAAE;AAFa,OAAxB,EAGGC,IAHH,CAGQ,MAAM;AACV,aAAKd,IAAL,GAAYO,MAAM,CAACC,IAAP,CAAYO,KAAZ,CAAkBC,eAAlB,EAAZ;AACA,aAAKC,QAAL,CAAc;AAAEnB,UAAAA,UAAU,EAAE,KAAKE,IAAL,CAAUF,UAAV,CAAqBI,GAArB;AAAd,SAAd;AACA,aAAKF,IAAL,CAAUF,UAAV,CAAqBoB,MAArB,CAA4B,KAAKrB,YAAjC;AACH,OAPD;AAQH,KATD;AAUH;;AAkBDsB,EAAAA,gBAAgB,GAAG;AACf,QAAG,KAAKC,KAAL,CAAWtB,UAAX,KAA0B,IAA7B,EAAkC;AAC9B,aAAO,IAAP;AACH,KAFD,MAEO,IAAG,KAAKC,KAAL,CAAWD,UAAd,EAA0B;AAC7B,0BACI;AACI,QAAA,SAAS,EAAC,2BADd;AAEI,QAAA,OAAO,EAAE,KAAKO,cAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH,KANM,MAMA;AACH,0BACI;AACI,QAAA,SAAS,EAAC,2BADd;AAEI,QAAA,OAAO,EAAE,KAAKD,aAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH;AACJ;;AAEDiB,EAAAA,MAAM,GAAG;AACL,wBACA;AAAA,gBACK,KAAKF,gBAAL;AADL;AAAA;AAAA;AAAA;AAAA,YADA;AAKH;;AAtD8B;;AAyDnC,MAAMG,eAAe,GAAIF,KAAD,IAAW;AAC/B,SAAO;AAAEtB,IAAAA,UAAU,EAAEsB,KAAK,CAACpB,IAAN,CAAWF;AAAzB,GAAP;AACH,CAFD;;AAIA,eAAeL,OAAO,CAAC6B,eAAD,EAAkB;AAAE5B,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAlB,CAAP,CAA8CC,UAA9C,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport './GoogleAuth.css';\r\nimport { connect } from 'react-redux';\r\nimport { signIn, signOut } from '../actions';\r\n\r\nclass GoogleAuth extends Component {\r\n    componentDidMount() {\r\n        window.gapi.load('client:auth2', () => {\r\n            window.gapi.client.init({\r\n                clientId: '833629421106-5llk1e0u6stomps348iu29ljgk3i2o6u.apps.googleusercontent.com',\r\n                scope: 'email'\r\n            }).then(() => {\r\n                this.auth = window.gapi.auth2.getAuthInstance();\r\n                this.setState({ isSignedIn: this.auth.isSignedIn.get()    });\r\n                this.auth.isSignedIn.listen(this.onAuthChange);\r\n            });\r\n        });\r\n    }\r\n\r\n    onAuthChange = (isSignedIn) => {\r\n        if(isSignedIn) {\r\n        this.props.signIn(this.auth.currentUser.get().getId());\r\n        } else {\r\n        this.props.signOut();\r\n        }\r\n    }\r\n\r\n    onSignInClick = () => {\r\n        this.auth.signIn();\r\n    }\r\n\r\n    onSignOutClick = () => {\r\n        this.auth.signOut();\r\n    }\r\n\r\n    renderAuthButton() {\r\n        if(this.state.isSignedIn === null){\r\n            return null;\r\n        } else if(this.props.isSignedIn) {\r\n            return (\r\n                <button\r\n                    className=\"loginBtn loginBtn--google\"\r\n                    onClick={this.onSignOutClick}>Log Out</button>\r\n            )\r\n        } else {\r\n            return (\r\n                <button\r\n                    className=\"loginBtn loginBtn--google\"\r\n                    onClick={this.onSignInClick}>Login With Google</button>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            {this.renderAuthButton()}\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { isSignedIn: state.auth.isSignedIn };\r\n}\r\n\r\nexport default connect(mapStateToProps, { signIn, signOut })(GoogleAuth);"]},"metadata":{},"sourceType":"module"}